"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const stream_1 = require("stream");
const puppeteer_1 = __importDefault(require("puppeteer"));
const PuppeteerScreenRecorder_1 = require("../lib/PuppeteerScreenRecorder");
/** @ignore */
async function testStartMethod(format, isStream) {
    const browser = await puppeteer_1.default.launch({
        executablePath: process.env['PUPPETEER_EXECUTABLE_PATH'],
        headless: false,
    });
    const page = await browser.newPage();
    const recorder = new PuppeteerScreenRecorder_1.PuppeteerScreenRecorder(page);
    if (isStream) {
        const passthrough = new stream_1.PassThrough();
        format = format.replace('video', 'stream');
        const fileWriteStream = fs_1.default.createWriteStream(format);
        passthrough.pipe(fileWriteStream);
        await recorder.startStream(passthrough);
    }
    else {
        await recorder.start(format);
    }
    await page.goto('https://developer.mozilla.org/en-US/docs/Web/CSS/animation');
    await page.waitFor(10 * 1000);
    await recorder.stop();
    await browser.close();
}
async function executeSample(format) {
    const argList = process.argv.slice(2);
    const isStreamTest = argList.includes('stream');
    console.log(`Testing with Method using ${isStreamTest ? 'stream' : 'normal'} mode`);
    return testStartMethod(format, isStreamTest);
}
executeSample('./report/video/simple1.mp4').then(() => {
    console.log('completed');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXhhbXBsZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDRDQUFvQjtBQUNwQixtQ0FBcUM7QUFFckMsMERBQWtDO0FBRWxDLDRFQUF5RTtBQUV6RSxjQUFjO0FBQ2QsS0FBSyxVQUFVLGVBQWUsQ0FBQyxNQUFjLEVBQUUsUUFBaUI7SUFDOUQsTUFBTSxPQUFPLEdBQUcsTUFBTSxtQkFBUyxDQUFDLE1BQU0sQ0FBQztRQUNyQyxjQUFjLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQztRQUN4RCxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDLENBQUM7SUFDSCxNQUFNLElBQUksR0FBRyxNQUFNLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyQyxNQUFNLFFBQVEsR0FBRyxJQUFJLGlEQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25ELElBQUksUUFBUSxFQUFFO1FBQ1osTUFBTSxXQUFXLEdBQUcsSUFBSSxvQkFBVyxFQUFFLENBQUM7UUFDdEMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sZUFBZSxHQUFHLFlBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyRCxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2xDLE1BQU0sUUFBUSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN6QztTQUFNO1FBQ0wsTUFBTSxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzlCO0lBQ0QsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLDREQUE0RCxDQUFDLENBQUM7SUFDOUUsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM5QixNQUFNLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixNQUFNLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN4QixDQUFDO0FBRUQsS0FBSyxVQUFVLGFBQWEsQ0FBQyxNQUFNO0lBQ2pDLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RDLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFaEQsT0FBTyxDQUFDLEdBQUcsQ0FDVCw2QkFBNkIsWUFBWSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsT0FBTyxDQUN2RSxDQUFDO0lBQ0YsT0FBTyxlQUFlLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFFRCxhQUFhLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO0lBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDM0IsQ0FBQyxDQUFDLENBQUMifQ==